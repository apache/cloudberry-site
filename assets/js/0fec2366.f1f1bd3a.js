"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[21537],{2671:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var n=s(85893),t=s(11151);const o={title:"Manage Resources"},a="Manage Resources",i={id:"performance/manage-resources",title:"Manage Resources",description:"Apache Cloudberry provides features to help you prioritize and allocate resources to queries according to business requirements and to prevent queries from starting when resources are unavailable.",source:"@site/versioned_docs/version-2.x/performance/manage-resources.md",sourceDirName:"performance",slug:"/performance/manage-resources",permalink:"/docs/performance/manage-resources",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/versioned_docs/version-2.x/performance/manage-resources.md",tags:[],version:"2.x",lastUpdatedBy:"Dianjin Wang",lastUpdatedAt:1754028859,formattedLastUpdatedAt:"Aug 1, 2025",frontMatter:{title:"Manage Resources"},sidebar:"docsbars",previous:{title:"Use Column-Level Compression",permalink:"/docs/performance/use-columnar-compression"},next:{title:"Resource Queues",permalink:"/docs/performance/manage-resources-using-resource-queues"}},c={},d=[];function u(e){const r={a:"a",code:"code",h1:"h1",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"manage-resources",children:"Manage Resources"}),"\n",(0,n.jsx)(r.p,{children:"Apache Cloudberry provides features to help you prioritize and allocate resources to queries according to business requirements and to prevent queries from starting when resources are unavailable."}),"\n",(0,n.jsxs)(r.p,{children:["You can use resource management features to limit the number of concurrent queries, the amount of memory used to run a query, and the relative amount of CPU devoted to processing a query. Apache Cloudberry provides two schemes to manage resources: ",(0,n.jsx)(r.a,{href:"/docs/performance/manage-resources-using-resource-queues",children:"Resource Queues"})," and ",(0,n.jsx)(r.a,{href:"/docs/performance/manage-resources-using-resource-groups",children:"Resource Groups"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["Either the resource queue or the resource group management scheme can be active in Apache Cloudberry; both schemes cannot be active at the same time. Set the server configuration parameter ",(0,n.jsx)(r.code,{children:"gp_resource_manager"}),"to enable the preferred scheme in the Apache Cloudberry cluster."]}),"\n",(0,n.jsx)(r.p,{children:"The following table summarizes some of the differences between resource queues and resource groups."}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Metric"}),(0,n.jsx)(r.th,{children:"Resource queues"}),(0,n.jsx)(r.th,{children:"Resource groups"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Concurrency"}),(0,n.jsx)(r.td,{children:"Defines the number of query slots available at a time"}),(0,n.jsx)(r.td,{children:"Defines the number of transaction slots available at a time"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"CPU"}),(0,n.jsx)(r.td,{children:"Specify query priority"}),(0,n.jsx)(r.td,{children:"Specify percentage of CPU resources or the specific number of CPU cores; uses Linux Control Groups"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Memory"}),(0,n.jsx)(r.td,{children:"Managed at the queue and operator level; users can over-subscribe"}),(0,n.jsx)(r.td,{children:"Managed at the transaction level, with enhanced allocation and tracking; users can over-subscribe"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Users"}),(0,n.jsx)(r.td,{children:"Limits are applied only to non-admin users"}),(0,n.jsxs)(r.td,{children:["Limits are applied to ",(0,n.jsx)(r.code,{children:"SUPERUSER"}),", non-admin users, and system processes of non-user classes"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Disk I/O"}),(0,n.jsx)(r.td,{children:"None"}),(0,n.jsx)(r.td,{children:"Limit the maximum read/write disk I/O throughput, and maximum read/write I/O operations per second"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Queueing"}),(0,n.jsx)(r.td,{children:"Queue when no slot available or not enough available memory"}),(0,n.jsx)(r.td,{children:"Queue only when no slot is available"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Query Failure"}),(0,n.jsx)(r.td,{children:"Query may fail immediately if the allocated memory for the query surpasses the available system memory and spill limits"}),(0,n.jsx)(r.td,{children:"Query may fail if the allocated memory for the query surpasses the available system memory and spill limits"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Limit Bypass"}),(0,n.jsxs)(r.td,{children:["Limits are not enforced for ",(0,n.jsx)(r.code,{children:"SUPERUSER"})," roles and certain operators and functions"]}),(0,n.jsxs)(r.td,{children:["Limits are not enforced on ",(0,n.jsx)(r.code,{children:"SET"}),", ",(0,n.jsx)(r.code,{children:"RESET"}),", and ",(0,n.jsx)(r.code,{children:"SHOW"})," commands. Additionally, certain queries may be configured to bypass the concurrency limit"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"External Components"}),(0,n.jsx)(r.td,{children:"None"}),(0,n.jsx)(r.td,{children:"Manage PL/Container CPU resources"})]})]})]})]})}function l(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},11151:(e,r,s)=>{s.d(r,{Z:()=>i,a:()=>a});var n=s(67294);const t={},o=n.createContext(t);function a(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);