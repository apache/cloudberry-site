"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[67333],{158:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>n});var i=s(85893),d=s(11151);const o={title:"pg_policy"},r="pg_policy",c={id:"sys-catalogs/sys-tables/pg-policy",title:"pg_policy",description:"The catalog pg_policy stores row level security policies for tables. A policy includes the kind of command that it applies to (possibly all commands), the roles that it applies to, the expression to be added as a security-barrier qualification to queries that include the table, and the expression to be added as a WITH CHECK option for queries that attempt to add new records to the table.",source:"@site/versioned_docs/version-2.x/sys-catalogs/sys-tables/pg-policy.md",sourceDirName:"sys-catalogs/sys-tables",slug:"/sys-catalogs/sys-tables/pg-policy",permalink:"/docs/sys-catalogs/sys-tables/pg-policy",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/versioned_docs/version-2.x/sys-catalogs/sys-tables/pg-policy.md",tags:[],version:"2.x",lastUpdatedBy:"Dianjin Wang",lastUpdatedAt:1756779347,formattedLastUpdatedAt:"Sep 2, 2025",frontMatter:{title:"pg_policy"},sidebar:"docsbars",previous:{title:"pg_partitioned_table",permalink:"/docs/sys-catalogs/sys-tables/pg-partitioned-table"},next:{title:"pg_proc",permalink:"/docs/sys-catalogs/sys-tables/pg-proc"}},l={},n=[];function a(e){const t={admonition:"admonition",code:"code",h1:"h1",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"pg_policy",children:"pg_policy"}),"\n",(0,i.jsxs)(t.p,{children:["The catalog ",(0,i.jsx)(t.code,{children:"pg_policy"})," stores row level security policies for tables. A policy includes the kind of command that it applies to (possibly all commands), the roles that it applies to, the expression to be added as a security-barrier qualification to queries that include the table, and the expression to be added as a ",(0,i.jsx)(t.code,{children:"WITH CHECK"})," option for queries that attempt to add new records to the table."]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"column"}),(0,i.jsx)(t.th,{children:"type"}),(0,i.jsx)(t.th,{children:"references"}),(0,i.jsx)(t.th,{children:"description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"oid"})}),(0,i.jsx)(t.td,{children:"oid"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"The object ID"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"polname"})}),(0,i.jsx)(t.td,{children:"name"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"The name of the policy"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"polerelid"})}),(0,i.jsx)(t.td,{children:"oid"}),(0,i.jsx)(t.td,{children:"pg_class.oid"}),(0,i.jsx)(t.td,{children:"The table to which the policy applies"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"polcmd"})}),(0,i.jsx)(t.td,{children:"char"}),(0,i.jsx)(t.td,{}),(0,i.jsxs)(t.td,{children:["The command type to which the policy is applied: ",(0,i.jsx)(t.code,{children:"r"})," for ",(0,i.jsx)(t.code,{children:"SELECT"}),", ",(0,i.jsx)(t.code,{children:"a"})," for ",(0,i.jsx)(t.code,{children:"INSERT"}),", ",(0,i.jsx)(t.code,{children:"w"})," for ",(0,i.jsx)(t.code,{children:"UPDATE"}),", ",(0,i.jsx)(t.code,{children:"d"})," for ",(0,i.jsx)(t.code,{children:"DELETE"}),", or ",(0,i.jsx)(t.code,{children:"*"})," for all"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"polpermissive"})}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"\xa0"}),(0,i.jsx)(t.td,{children:"Is the policy permissive or restrictive?"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"polroles"})}),(0,i.jsx)(t.td,{children:"ARRAY"}),(0,i.jsx)(t.td,{children:"pg_authid.oid\xa0"}),(0,i.jsx)(t.td,{children:"The roles to which the policy is applied"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"polqual"})}),(0,i.jsx)(t.td,{children:"pg_node_tree"}),(0,i.jsx)(t.td,{children:"\xa0"}),(0,i.jsx)(t.td,{children:"The expression tree to be added to the security barrier qualifications for queries that use the table"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"polwithcheck"})}),(0,i.jsx)(t.td,{children:"pg_node_tree"}),(0,i.jsx)(t.td,{children:"\xa0"}),(0,i.jsxs)(t.td,{children:["The expression tree to be added to the ",(0,i.jsx)(t.code,{children:"WITH CHECK"})," qualifications for queries that attempt to add rows to the table"]})]})]})]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["Apache Cloudberry applies policies stored in ",(0,i.jsx)(t.code,{children:"pg_policy"})," only when ",(0,i.jsx)(t.code,{children:"pg_class.relrowsecurity"})," is set for their table."]})})]})}function h(e={}){const{wrapper:t}={...(0,d.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>c,a:()=>r});var i=s(67294);const d={},o=i.createContext(d);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);