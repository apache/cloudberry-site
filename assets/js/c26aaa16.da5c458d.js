"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[17870],{19796:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>a,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var s=r(85893),d=r(11151);const o={title:"pg_operator"},n="pg_operator",i={id:"sys-catalogs/sys-tables/pg-operator",title:"pg_operator",description:"The pg_operator system catalog table stores information about operators, both built-in and those defined by CREATE OPERATOR. Unused column contain zeroes. For example, oprleft is zero for a prefix operator.",source:"@site/docs/sys-catalogs/sys-tables/pg-operator.md",sourceDirName:"sys-catalogs/sys-tables",slug:"/sys-catalogs/sys-tables/pg-operator",permalink:"/docs/next/sys-catalogs/sys-tables/pg-operator",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/docs/sys-catalogs/sys-tables/pg-operator.md",tags:[],version:"current",lastUpdatedBy:"TomShawn",lastUpdatedAt:1747973042,formattedLastUpdatedAt:"May 23, 2025",frontMatter:{title:"pg_operator"},sidebar:"docsbars",previous:{title:"pg_namespace",permalink:"/docs/next/sys-catalogs/sys-tables/pg-namespace"},next:{title:"pg_partitioned_table",permalink:"/docs/next/sys-catalogs/sys-tables/pg-partitioned-table"}},c={},l=[];function h(e){const t={code:"code",h1:"h1",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"pg_operator",children:"pg_operator"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"pg_operator"})," system catalog table stores information about operators, both built-in and those defined by ",(0,s.jsx)(t.code,{children:"CREATE OPERATOR"}),". Unused column contain zeroes. For example, ",(0,s.jsx)(t.code,{children:"oprleft"})," is zero for a prefix operator."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"column"}),(0,s.jsx)(t.th,{children:"type"}),(0,s.jsx)(t.th,{children:"references"}),(0,s.jsx)(t.th,{children:"description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oid"})}),(0,s.jsx)(t.td,{children:"oid"}),(0,s.jsx)(t.td,{children:"\xa0"}),(0,s.jsx)(t.td,{children:"Row identifier (hidden attribute, must be explicitly selected)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprname"})}),(0,s.jsx)(t.td,{children:"name"}),(0,s.jsx)(t.td,{children:"\xa0"}),(0,s.jsx)(t.td,{children:"Name of the operator"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprnamespace"})}),(0,s.jsx)(t.td,{children:"oid"}),(0,s.jsx)(t.td,{children:"pg_namespace.oid"}),(0,s.jsx)(t.td,{children:"The OID of the namespace that contains this operator"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprowner"})}),(0,s.jsx)(t.td,{children:"oid"}),(0,s.jsx)(t.td,{children:"pg_authid.oid"}),(0,s.jsx)(t.td,{children:"Owner of the operator"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprkind"})}),(0,s.jsx)(t.td,{children:"char"}),(0,s.jsx)(t.td,{children:"\xa0"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"b"})," = infix (both), ",(0,s.jsx)(t.code,{children:"l"})," = prefix (left), ",(0,s.jsx)(t.code,{children:"r"})," = postfix (right)"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprcanmerge"})}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"\xa0"}),(0,s.jsx)(t.td,{children:"This operator supports merge joins"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprcanhash"})}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"\xa0"}),(0,s.jsx)(t.td,{children:"This operator supports hash joins"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprleft"})}),(0,s.jsx)(t.td,{children:"oid"}),(0,s.jsx)(t.td,{children:"pg_type.oid"}),(0,s.jsx)(t.td,{children:"Type of the left operand"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprright"})}),(0,s.jsx)(t.td,{children:"oid"}),(0,s.jsx)(t.td,{children:"pg_type.oid"}),(0,s.jsx)(t.td,{children:"Type of the right operand"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprresult"})}),(0,s.jsx)(t.td,{children:"oid"}),(0,s.jsx)(t.td,{children:"pg_type.oid"}),(0,s.jsx)(t.td,{children:"Type of the result"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprcom"})}),(0,s.jsx)(t.td,{children:"oid"}),(0,s.jsx)(t.td,{children:"pg_operator.oid"}),(0,s.jsx)(t.td,{children:"Commutator of this operator, if any"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprnegate"})}),(0,s.jsx)(t.td,{children:"oid"}),(0,s.jsx)(t.td,{children:"pg_operator.oid"}),(0,s.jsx)(t.td,{children:"Negator of this operator, if any"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprcode"})}),(0,s.jsx)(t.td,{children:"regproc"}),(0,s.jsx)(t.td,{children:"pg_proc.oid"}),(0,s.jsx)(t.td,{children:"Function that implements this operator"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprrest"})}),(0,s.jsx)(t.td,{children:"regproc"}),(0,s.jsx)(t.td,{children:"pg_proc.oid"}),(0,s.jsx)(t.td,{children:"Restriction selectivity estimation function for this operator"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oprjoin"})}),(0,s.jsx)(t.td,{children:"regproc"}),(0,s.jsx)(t.td,{children:"pg_proc.oid"}),(0,s.jsx)(t.td,{children:"Join selectivity estimation function for this operator"})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,d.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},11151:(e,t,r)=>{r.d(t,{Z:()=>i,a:()=>n});var s=r(67294);const d={},o=s.createContext(d);function n(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:n(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);