"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[80192],{22393:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var r=s(85893),n=s(11151);const i={title:"gp_settings"},d="gp_settings",c={id:"sys-catalogs/sys-views/gp-settings",title:"gp_settings",description:"The gpsettings view is a cluster-wide view that displays the pgsettings information from every primary segment.",source:"@site/docs/sys-catalogs/sys-views/gp-settings.md",sourceDirName:"sys-catalogs/sys-views",slug:"/sys-catalogs/sys-views/gp-settings",permalink:"/docs/next/sys-catalogs/sys-views/gp-settings",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/docs/sys-catalogs/sys-views/gp-settings.md",tags:[],version:"current",lastUpdatedBy:"Dianjin Wang",lastUpdatedAt:1756102252,formattedLastUpdatedAt:"Aug 25, 2025",frontMatter:{title:"gp_settings"},sidebar:"docsbars",previous:{title:"gp_session_endpoints",permalink:"/docs/next/sys-catalogs/sys-views/gp-session-endpoints"},next:{title:"gp_stat_activity",permalink:"/docs/next/sys-catalogs/sys-views/gp-stat-activity"}},l={},a=[];function o(e){const t={code:"code",h1:"h1",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"gp_settings",children:"gp_settings"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"gp_settings"})," view is a cluster-wide view that displays the ",(0,r.jsx)(t.code,{children:"pg_settings"})," information from every primary segment."]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"name"}),(0,r.jsx)(t.th,{children:"type"}),(0,r.jsx)(t.th,{children:"references"}),(0,r.jsx)(t.th,{children:"description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"gp_segment_id"})}),(0,r.jsx)(t.td,{children:"integer"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Unique identifier of a segment (or coordinator) instance."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"name"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Runtime configuration parameter name."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"setting"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Current value of the parameter."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"unit"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Implicit unit of the parameter."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"category"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Logical group of the parameter."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"short_desc"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"A brief description of the parameter."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"extra_desc"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Additional, more detailed, description of the parameter."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"context"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Context required to set the parameter's value."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"vartype"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Parameter type (bool, enum, integer, real, or string)v"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"source"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Source of the current parameter value.v"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"min_val"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Minimum allowed value of the parameter (null for non-numeric values)."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"max_val"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Maximum allowed value of the parameter (null for non-numeric values)."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"enumvals"})}),(0,r.jsx)(t.td,{children:"text[]"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Permitted values of an enum parameter (null for non-enum values)."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"boot_val"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Parameter value assumed at server startup if the parameter is not otherwise set."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"reset_val"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Value that RESET would reset the parameter to in the current session."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"sourcefile"})}),(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{}),(0,r.jsxs)(t.td,{children:["Configuration file the current value was set in (null for values set from sources other than configuration files, or when examined by a user who is neither a superuser or a member of ",(0,r.jsx)(t.code,{children:"pg_read_all_settings"}),"); helpful when using include directives in configuration files."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"sourceline"})}),(0,r.jsx)(t.td,{children:"integer"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Line number within the configuration file the current value was set at (null for values set from sources other than configuration files, or when examined by a user who is neither a superuser or a member of pg_read_all_settings)."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"pending_restart"})}),(0,r.jsx)(t.td,{children:"boolean"}),(0,r.jsx)(t.td,{}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"true"})," if the value has been changed in the configuration file but needs a restart; otherwise ",(0,r.jsx)(t.code,{children:"false"}),"."]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>c,a:()=>d});var r=s(67294);const n={},i=r.createContext(n);function d(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);