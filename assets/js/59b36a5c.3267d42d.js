"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[61886],{34216:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var n=s(85893),a=s(11151);const l={title:"DEALLOCATE"},r="DEALLOCATE",i={id:"sql-stmts/deallocate",title:"DEALLOCATE",description:"Deallocates a prepared statement.",source:"@site/docs/sql-stmts/deallocate.md",sourceDirName:"sql-stmts",slug:"/sql-stmts/deallocate",permalink:"/docs/next/sql-stmts/deallocate",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/docs/sql-stmts/deallocate.md",tags:[],version:"current",lastUpdatedBy:"Dianjin Wang",lastUpdatedAt:1760151257,formattedLastUpdatedAt:"Oct 11, 2025",frontMatter:{title:"DEALLOCATE"},sidebar:"docsbars",previous:{title:"CREATE VIEW",permalink:"/docs/next/sql-stmts/create-view"},next:{title:"DECLARE",permalink:"/docs/next/sql-stmts/declare"}},d={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Compatibility",id:"compatibility",level:2},{value:"See also",id:"see-also",level:2}];function o(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"deallocate",children:"DEALLOCATE"}),"\n",(0,n.jsx)(t.p,{children:"Deallocates a prepared statement."}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"DEALLOCATE [PREPARE] { <name> | ALL }\n"})}),"\n",(0,n.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"DEALLOCATE"})," is used to deallocate a previously prepared SQL statement. If you do not explicitly deallocate a prepared statement, it is deallocated when the session ends."]}),"\n",(0,n.jsxs)(t.p,{children:["For more information on prepared statements, see ",(0,n.jsx)(t.a,{href:"/docs/next/sql-stmts/prepare",children:"PREPARE"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"PREPARE"})})}),"\n",(0,n.jsx)(t.p,{children:"Optional key word which is ignored."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"name"})})}),"\n",(0,n.jsx)(t.p,{children:"The name of the prepared statement to deallocate."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"ALL"})})}),"\n",(0,n.jsx)(t.p,{children:"Deallocate all prepared statements"}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsxs)(t.p,{children:["Deallocate the previously prepared statement named ",(0,n.jsx)(t.code,{children:"insert_names"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"DEALLOCATE insert_names;\n"})}),"\n",(0,n.jsx)(t.h2,{id:"compatibility",children:"Compatibility"}),"\n",(0,n.jsxs)(t.p,{children:["The SQL standard includes a ",(0,n.jsx)(t.code,{children:"DEALLOCATE"})," statement, but it is only for use in embedded SQL."]}),"\n",(0,n.jsx)(t.h2,{id:"see-also",children:"See also"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"/docs/next/sql-stmts/execute",children:"EXECUTE"}),", ",(0,n.jsx)(t.a,{href:"/docs/next/sql-stmts/prepare",children:"PREPARE"})]})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>i,a:()=>r});var n=s(67294);const a={},l=n.createContext(a);function r(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);