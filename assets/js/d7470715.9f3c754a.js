"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[1900],{36406:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var s=t(85893),a=t(11151),o=t(74866),r=t(85162);const l={title:"Geospatial Analytics"},i="Geospatial Analytics",c={id:"advanced-analytics/postgis",title:"Geospatial Analytics",description:"PostGIS extends the capabilities of the PostgreSQL by adding support for storing, indexing, and querying geospatial data. Apache Cloudberry supports PostGIS for geospatial analytics.",source:"@site/versioned_docs/version-2.x/advanced-analytics/postgis.md",sourceDirName:"advanced-analytics",slug:"/advanced-analytics/postgis",permalink:"/docs/advanced-analytics/postgis",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/versioned_docs/version-2.x/advanced-analytics/postgis.md",tags:[],version:"2.x",lastUpdatedBy:"Dianjin Wang",lastUpdatedAt:1757492265,formattedLastUpdatedAt:"Sep 10, 2025",frontMatter:{title:"Geospatial Analytics"},sidebar:"docsbars",previous:{title:"Full Text Search Limitations",permalink:"/docs/operate-with-data/sql-queries/full-text-search/full-text-search-limitations"},next:{title:"Directory Table",permalink:"/docs/advanced-analytics/directory-tables"}},d={},u=[{value:"Compile PostGIS for Apache Cloudberry",id:"compile-postgis-for-apache-cloudberry",level:2},{value:"Use PostGIS in Apache Cloudberry",id:"use-postgis-in-apache-cloudberry",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"geospatial-analytics",children:"Geospatial Analytics"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://postgis.net/",children:"PostGIS"})," extends the capabilities of the PostgreSQL by adding support for storing, indexing, and querying geospatial data. Apache Cloudberry supports PostGIS for geospatial analytics."]}),"\n",(0,s.jsx)(n.p,{children:"This document introduces how to compile and build PostGIS for your Apache Cloudberry cluster."}),"\n",(0,s.jsxs)(n.p,{children:["You can access the PostGIS for Apache Cloudberry project repo at ",(0,s.jsx)(n.a,{href:"https://github.com/cloudberry-contrib/postgis",children:(0,s.jsx)(n.code,{children:"cloudberry-contrib/postgis"})}),". The PostGIS code in this repo is dedicated to Apache Cloudberry. The compilation and building method introduced in this document is based on the code of this repo."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"This repo is contributed by the community members and customized for Cloudberry, but please note that it is not maintained as one official Cloudberry project."})}),"\n",(0,s.jsx)(n.h2,{id:"compile-postgis-for-apache-cloudberry",children:"Compile PostGIS for Apache Cloudberry"}),"\n",(0,s.jsx)(n.p,{children:"Before installing PostGIS for Apache Cloudberry, install the required dependencies and compile several components. This process is tested and supported on Rocky Linux 8 & Rocky Linux 9."}),"\n",(0,s.jsxs)(n.p,{children:["Before you get started, ensure that the Apache Cloudberry is correctly installed on your machine. If it is not installed, see the ",(0,s.jsx)(n.a,{href:"https://cloudberry.apache.org/docs/",children:"documentation"})," for installation instructions."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["The following steps will be operated under the ",(0,s.jsx)(n.code,{children:"gpadmin"})," user. Please make sure you are using the ",(0,s.jsx)(n.code,{children:"gpadmin"})," user to operate the commands. If not, you can swithch to the ",(0,s.jsx)(n.code,{children:"gpadmin"})," user by running the ",(0,s.jsx)(n.code,{children:"su - gpadmin"})," command."]})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Install the pre-requested dependencies."}),"\n",(0,s.jsxs)(o.Z,{children:[(0,s.jsx)(r.Z,{value:"rocky-linux8",label:"For Rocky Linux 8",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo dnf install -y libtool boost-devel gmp-devel mpfr-devel \\\n    pcre-devel protobuf-c protobuf-c-devel bzip2 \\\n    gcc make subversion gcc-c++ sqlite-devel libxml2-devel \\\n    swig expat-devel libcurl-devel python3-devel json-c\n\nsudo dnf install -y --enablerepo=devel protobuf protobuf-devel\n"})})}),(0,s.jsx)(r.Z,{value:"rocky-linux9",label:"Rocky Linux 9",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo dnf install -y libtool boost-devel gmp-devel mpfr-devel \\\n    pcre-devel  protobuf-c bzip2 gcc make subversion gcc-c++ \\\n    sqlite-devel libxml2-devel  expat-devel libcurl-devel \\\n    json-c python3-devel\n\nsudo dnf install -y --enablerepo=crb protobuf protobuf-devel protobuf-c-devel swig\nsudo dnf install --enablerepo=epel proj-devel\n"})})})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Build the components (GDAL, CGAL, SFCGAL, and GEOS)."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Build GDAL."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://gdal.org/index.html",children:"GDAL"})," is a translator library for raster and vector geospatial data formats. Follow the commands to install it:"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(o.Z,{children:[(0,s.jsxs)(r.Z,{value:"rocky-linux8",label:"For Rocky Linux 8",default:!0,children:[(0,s.jsx)(n.p,{children:"We need to install Jasper first under Rocky Linux 8 for building GDAL library:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'  wget https://www.ece.uvic.ca/~frodo/jasper/software/jasper-1.900.1.zip\n  unzip jasper-1.900.1.zip\n  cd jasper-1.900.1\n  ./configure --prefix=/usr/local/jasper-1.900.1 --build=aarch64-unknown-linux-gnu CFLAGS="-fPIC"\n  make -j$(nproc) && sudo make -j$(nproc) install\n  echo "/usr/local/jasper-1.900/lib" | sudo tee /etc/ld.so.conf.d/jasper.conf\n  sudo ldconfig\n'})}),(0,s.jsx)(n.p,{children:"Then build GDAL:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"  wget https://download.osgeo.org/gdal/2.2.1/gdal-2.2.1.tar.gz --no-check-certificate\n  tar xf gdal-2.2.1.tar.gz\n  cd gdal-2.2.1/\n  ./configure --prefix=/usr/local/gdal-2.2.1 \\\n      --with-jasper=/usr/local/jasper-1.900.1 \\\n      --enable-static\n  make -j$(nproc) && sudo make -j$(nproc) install\n"})})]}),(0,s.jsx)(r.Z,{value:"rocky-linux9",label:"Rocky Linux 9",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"  wget https://download.osgeo.org/gdal/2.2.1/gdal-2.2.1.tar.gz --no-check-certificate\n  tar xf gdal-2.2.1.tar.gz\n  cd gdal-2.2.1/\n  ./configure --prefix=/usr/local/gdal-2.2.1\n  make -j$(nproc) && sudo make -j$(nproc) install\n"})})})]}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Build CGAL."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.cgal.org/",children:"CGAL"})," provides easy access to efficient and reliable geometric algorithms in the form of a C++ library. Follow the commands to install it:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"wget https://github.com/CGAL/cgal/archive/releases/CGAL-4.13.tar.gz\ntar xf CGAL-4.13.tar.gz\ncd cgal-releases-CGAL-4.13/\nmkdir build && cd build\ncmake ..\nmake -j$(nproc) && sudo make -j$(nproc) install\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Build SFCGAL."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/Oslandia/SFCGAL",children:"SFCGAL"})," is a C++ wrapper library around CGAL to support ISO 19107:2013 and OGC Simple Features Access 1.2 for 3D operations. Follow the commands to install it:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"wget https://github.com/Oslandia/SFCGAL/archive/v1.3.6.tar.gz\ntar xf v1.3.6.tar.gz\ncd SFCGAL-1.3.6/\nmkdir build && cd build\ncmake -DCMAKE_INSTALL_PREFIX=/usr/local/sfcgal-1.3.6 ..\nmake -j$(nproc) && sudo make -j$(nproc) install\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Build GEOS."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://libgeos.org/",children:"GEOS"})," is a C/C++ library for computational geometry with a focus on algorithms used in geographic information systems (GIS) software. Follow the commands to install it:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"wget https://download.osgeo.org/geos/geos-3.7.0.tar.bz2 --no-check-certificate\ntar xf geos-3.7.0.tar.bz2\ncd geos-3.7.0/\n./configure --prefix=/usr/local/geos-3.7.0/\nmake -j$(nproc) && sudo make -j$(nproc) install\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Install proj library."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://proj.org/",children:"proj"})," is a library for performing conversions between geospatial coordinates. Follow the commands to install it:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"wget https://download.osgeo.org/proj/proj-4.9.3.tar.gz\ntar -xzf proj-4.9.3.tar.gz\ncd proj-4.9.3\n./configure --prefix=/usr/local/proj4\nmake -j$(nproc) && sudo make -j$(nproc) install\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Update ",(0,s.jsx)(n.code,{children:"/etc/ld.so.conf"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["After installing the above components, update ",(0,s.jsx)(n.code,{children:"/etc/ld.so.conf"})," to configure the dynamic loader to search for their directories:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo vi /etc/ld.so.conf\n"})}),"\n",(0,s.jsx)(n.p,{children:"Add the following lines to the end of the file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:" /usr/lib/\n /usr/lib64/\n /usr/local/sfcgal-1.3.6/lib64/\n /usr/local/gdal-2.2.1/lib/\n /usr/local/geos-3.7.0/lib/\n /usr/local/proj4/lib\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then run the command to update the dynamic loader cache:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo ldconfig\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Build and install PostGIS."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Download the ",(0,s.jsx)(n.code,{children:"cloudberry-contrib/postgis"})," repo to your ",(0,s.jsx)(n.code,{children:"/home/gpadmin"})," directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/cloudberry-contrib/postgis.git /home/gpadmin/postgis\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Compile PostGIS."}),"\n",(0,s.jsx)(n.p,{children:"Before starting the compilation process, run the following commands to make sure the environment variables are set ready (in the gpdemo environment):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"source /usr/local/cloudberry-db/greenplum_path.sh\nsource /home/gpadmin/cloudberry/gpAux/gpdemo/gpdemo-env.sh\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then continue:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'cd /home/gpadmin/postgis/postgis/build/postgis-2.5.4/\n./autogen.sh\n./configure --with-pgconfig="${GPHOME}"/bin/pg_config \\\n  --with-raster --without-topology \\\n  --with-gdalconfig=/usr/local/gdal-2.2.1/bin/gdal-config \\\n  --with-sfcgal=/usr/local/sfcgal-1.3.6/bin/sfcgal-config \\\n  --with-geosconfig=/usr/local/geos-3.7.0/bin/geos-config \\\n  --with-projdir=/usr/local/proj4\nmake -j$(nproc) && sudo make -j$(nproc) install\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"use-postgis-in-apache-cloudberry",children:"Use PostGIS in Apache Cloudberry"}),"\n",(0,s.jsx)(n.p,{children:"After you have compiled and built PostGIS and the supporting extensions successfully on your Apache Cloudberry cluster and have started the demo cluster, you can run the following commands to enable PostGIS and the supporting extensions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"$ psql -p 7000 postgres\n\npostgres=# CREATE EXTENSION postgis;     -- Enables PostGIS and raster\npostgres=# CREATE EXTENSION fuzzystrmatch;     -- Required for installing Tiger Geocoder\npostgres=# CREATE EXTENSION postgis_tiger_geocoder;     -- Enables Tiger Geocoder\npostgres=# CREATE EXTENSION address_standardizer;     -- Enables address_standardizer\npostgres=# CREATE EXTENSION address_standardizer_data_us;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The following example uses PostGIS to create non-OpenGIS tables in the database, and insert and query geometric objects."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Creates a table named geom_test.\nCREATE TABLE geom_test ( gid int4, geom geometry, \n  name varchar(25) );\n\n-- Inserts a row into the table. The gid is 1, the geometry field represents a three-dimensional polygon object (a 3D square) using WKT format, and the name is '3D Square'.\nINSERT INTO geom_test ( gid, geom, name )\n  VALUES ( 1, 'POLYGON((0 0 0,0 5 0,5 5 0,5 0 0,0 0 0))', '3D Square');\n  \n-- Inserts the second row. The gid is 2, the geometry is a three-dimensional line string, and the name is '3D Line'.\nINSERT INTO geom_test ( gid, geom, name ) \n  VALUES ( 2, 'LINESTRING(1 1 1,5 5 5,7 7 5)', '3D Line' );\n  \n-- Inserts the third row. The gid is 3, the geometry is a two-dimensional multi-point object, and the name is '2D Aggregate Point'.\nINSERT INTO geom_test ( gid, geom, name )\n  VALUES ( 3, 'MULTIPOINT(3 4,8 9)', '2D Aggregate Point' );\n\n-- Uses ST_GeomFromEWKT to build a three-dimensional lines tring object from EWKT, then use Box3D to get the three-dimensional bounding box of that object. Use the && operator to query all rows in the geom_test table whose geom field intersects with the bounding box.\nSELECT * from geom_test WHERE geom &&\n  Box3D(ST_GeomFromEWKT('LINESTRING(2 2 0, 3 3 0)'));\n"})}),"\n",(0,s.jsx)(n.p,{children:"The following example uses PostGIS to create a table with geo-referenced data, inserts geo-coded point data, and outputs point data in standard text format."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Creates a table named geotest.\nCREATE TABLE geotest (id INT4, name VARCHAR(32) );\n\n-- Adds a geometry column named geopoint to the geotest table, defined as a POINT type with 2 dimensions, and specifies its Spatial Reference System (SRID) as 4326 (representing the WGS84 geographic coordinate system).\nSELECT AddGeometryColumn('geotest','geopoint', 4326,'POINT',2);\n\n-- Inserts the first row. The id is 1, the name is 'Olympia', and geopoint is a point object build from WKT text using ST_GeometryFromText with coordinates (-122.90, 46.97) and SRID 4326.\nINSERT INTO geotest (id, name, geopoint)\n  VALUES (1, 'Olympia', ST_GeometryFromText('POINT(-122.90 46.97)', 4326));\n  \n-- Inserts the second row. The id is 2, the name is 'Renton', with point coordinates (-122.22, 47.50) and the same SRID of 4326.\nINSERT INTO geotest (id, name, geopoint)\n  VALUES (2, 'Renton', ST_GeometryFromText('POINT(-122.22 47.50)', 4326));\n\n-- Selects the name and geopoint fields from the geotest table, but converts the geopoint field to standard text (WKT) format using the ST_AsText function.\nSELECT name,ST_AsText(geopoint) FROM geotest;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The following example uses the spatial indexing feature."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Creates table.\nCREATE TABLE spatial_data (\n  id SERIAL PRIMARY KEY,\n  geom geometry\n);\n\n-- Inserts data.\nINSERT INTO spatial_data (geom) VALUES \n(ST_GeomFromText('POINT(0 0)')),\n(ST_GeomFromText('POINT(1 1)')),\n(ST_GeomFromText('POLYGON((0 0, 4 0, 4 4, 0 4, 0 0))'));\n\n-- Creates spatial index.\nCREATE INDEX spatial_data_gist_idx\n  ON spatial_data\n  USING GIST (geom);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For more usages, you can follow the ",(0,s.jsx)(n.a,{href:"https://postgis.net/documentation/manual/",children:"PostGIS manual"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>r});t(67294);var s=t(90512);const a={tabItem:"tabItem_Ymn6"};var o=t(85893);function r(e){let{children:n,hidden:t,className:r}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,s.Z)(a.tabItem,r),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>T});var s=t(67294),a=t(90512),o=t(12466),r=t(16550),l=t(20469),i=t(91980),c=t(67392),d=t(50012);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:a}}=e;return{value:n,label:t,attributes:s,default:a}}))}(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const a=(0,r.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i._X)(o),(0,s.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=h(e),[r,i]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:o}))),[c,u]=g({queryString:t,groupId:a}),[m,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,o]=(0,d.Nk)(t);return[a,(0,s.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),f=(()=>{const e=c??m;return p({value:e,tabValues:o})?e:null})();(0,l.Z)((()=>{f&&i(f)}),[f]);return{selectedValue:r,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,o]),tabValues:o}}var b=t(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(85893);function j(e){let{className:n,block:t,selectedValue:s,selectValue:r,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{const n=e.currentTarget,t=i.indexOf(n),a=l[t].value;a!==s&&(c(n),r(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>i.push(e),onKeyDown:u,onClick:d,...o,className:(0,a.Z)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function v(e){const n=m(e);return(0,x.jsxs)("div",{className:(0,a.Z)("tabs-container",f.tabList),children:[(0,x.jsx)(j,{...e,...n}),(0,x.jsx)(y,{...e,...n})]})}function T(e){const n=(0,b.Z)();return(0,x.jsx)(v,{...e,children:u(e.children)},String(n))}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>r});var s=t(67294);const a={},o=s.createContext(a);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);