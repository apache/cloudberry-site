"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[47964],{46271:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var n=s(85893),i=s(11151);const r={title:"System Monitoring and Maintenance"},a="System Monitoring and Maintenance",o={id:"tutorials/best-practices/system-monitor-and-maintain-best-practices",title:"System Monitoring and Maintenance",description:"Best practices for regular maintenance that will ensure Apache Cloudberry high availability and optimal performance.",source:"@site/docs/tutorials/best-practices/system-monitor-and-maintain-best-practices.md",sourceDirName:"tutorials/best-practices",slug:"/tutorials/best-practices/system-monitor-and-maintain-best-practices",permalink:"/docs/next/tutorials/best-practices/system-monitor-and-maintain-best-practices",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/docs/tutorials/best-practices/system-monitor-and-maintain-best-practices.md",tags:[],version:"current",lastUpdatedBy:"Dianjin Wang",lastUpdatedAt:1758251426,formattedLastUpdatedAt:"Sep 19, 2025",frontMatter:{title:"System Monitoring and Maintenance"},sidebar:"docsbars",previous:{title:"System Configuration",permalink:"/docs/next/tutorials/best-practices/system-configuration-best-practices"},next:{title:"Manage Bloat in a Database",permalink:"/docs/next/tutorials/best-practices/manage-bloat"}},c={},d=[{value:"Monitor the system",id:"monitor-the-system",level:2},{value:"gpstate",id:"gpstate",level:3},{value:"gpcheckperf",id:"gpcheckperf",level:3},{value:"Monitor with operating system utilities",id:"monitor-with-operating-system-utilities",level:3},{value:"Best practices",id:"best-practices",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"system-monitoring-and-maintenance",children:"System Monitoring and Maintenance"}),"\n",(0,n.jsx)(t.p,{children:"Best practices for regular maintenance that will ensure Apache Cloudberry high availability and optimal performance."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"/docs/next/performance/update-stats-using-analyze",children:"Update Statistics with ANALYZE"})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"/docs/next/tutorials/best-practices/manage-bloat",children:"Manage Bloat in a Database"})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"monitor-the-system",children:"Monitor the system"}),"\n",(0,n.jsx)(t.p,{children:"Apache Cloudberry includes utilities that are useful for monitoring the system."}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"gp_toolkit"})," schema contains several views that can be accessed using SQL commands to query system catalogs, log files, and operating environment for system status information."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"gp_stats_missing"})," view shows tables that do not have statistics and require ",(0,n.jsx)(t.code,{children:"ANALYZE"})," to be run."]}),"\n",(0,n.jsx)(t.h3,{id:"gpstate",children:"gpstate"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"gpstate"})," utility program displays the status of the Cloudberry system, including which segments are down, coordinator and segment configuration information (hosts, data directories, etc.), the ports used by the system, and mapping of primary segments to their corresponding mirror segments."]}),"\n",(0,n.jsxs)(t.p,{children:["Run ",(0,n.jsx)(t.code,{children:"gpstate -Q"}),' to get a list of segments that are marked "down" in the coordinator system catalog.']}),"\n",(0,n.jsxs)(t.p,{children:["To get detailed status information for the Cloudberry system, run ",(0,n.jsx)(t.code,{children:"gpstate -s"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"gpcheckperf",children:"gpcheckperf"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"gpcheckperf"})," utility tests baseline hardware performance for a list of hosts. The results can help identify hardware issues. It performs the following checks:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["disk I/O test \u2013 measures I/O performance by writing and reading a large file using the ",(0,n.jsx)(t.code,{children:"dd"})," operating system command. It reports read and write rates in megabytes per second."]}),"\n",(0,n.jsx)(t.li,{children:"memory bandwidth test \u2013 measures sustainable memory bandwidth in megabytes per second using the STREAM benchmark."}),"\n",(0,n.jsxs)(t.li,{children:["network performance test \u2013 runs the ",(0,n.jsx)(t.code,{children:"gpnetbench"})," network benchmark program (optionally ",(0,n.jsx)(t.code,{children:"netperf)"})," to test network performance. The test is run in one of three modes: parallel pair test (",(0,n.jsx)(t.code,{children:"-r N"}),"), serial pair test (",(0,n.jsx)(t.code,{children:"-r n"}),"), or full-matrix test (",(0,n.jsx)(t.code,{children:"-r M)"}),". The minimum, maximum, average, and median transfer rates are reported in megabytes per second."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["To obtain valid numbers from ",(0,n.jsx)(t.code,{children:"gpcheckperf"}),", the database system must be stopped. The numbers from ",(0,n.jsx)(t.code,{children:"gpcheckperf"})," can be inaccurate even if the system is up and running with no query activity."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"gpcheckperf"})," requires a trusted host setup between the hosts involved in the performance test. It calls ",(0,n.jsx)(t.code,{children:"gpssh"})," and ",(0,n.jsx)(t.code,{children:"gpsync"}),", so these utilities must also be in your ",(0,n.jsx)(t.code,{children:"PATH"}),". Specify the hosts to check individually (",(0,n.jsx)(t.code,{children:"-h *host1* -h *host2* ..."}),") or with ",(0,n.jsx)(t.code,{children:"-f *hosts_file*"}),", where ",(0,n.jsx)(t.code,{children:"*hosts_file*"})," is a text file containing a list of the hosts to check. If you have more than one subnet, create a separate host file for each subnet so that you can test the subnets separately."]}),"\n",(0,n.jsxs)(t.p,{children:["By default, ",(0,n.jsx)(t.code,{children:"gpcheckperf"})," runs the disk I/O test, the memory test, and a serial pair network performance test. With the disk I/O test, you must use the ",(0,n.jsx)(t.code,{children:"-d"})," option to specify the file systems you want to test. The following command tests disk I/O and memory bandwidth on hosts listed in the ",(0,n.jsx)(t.code,{children:"subnet_1_hosts"})," file:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"gpcheckperf -f subnet_1_hosts -d /data1 -d /data2 -r ds\n"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"-r"})," option selects the tests to run: disk I/O (",(0,n.jsx)(t.code,{children:"d"}),"), memory bandwidth (",(0,n.jsx)(t.code,{children:"s"}),"), network parallel pair (",(0,n.jsx)(t.code,{children:"N"}),"), network serial pair test (",(0,n.jsx)(t.code,{children:"n"}),"), network full-matrix test (",(0,n.jsx)(t.code,{children:"M"}),"). Only one network mode can be selected per execution."]}),"\n",(0,n.jsx)(t.h3,{id:"monitor-with-operating-system-utilities",children:"Monitor with operating system utilities"}),"\n",(0,n.jsx)(t.p,{children:"The following Linux/UNIX utilities can be used to assess host performance:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"iostat"})," allows you to monitor disk activity on segment hosts."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"top"})," displays a dynamic view of operating system processes."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"vmstat"})," displays memory usage statistics."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["You can use ",(0,n.jsx)(t.code,{children:"gpssh"})," to run utilities on multiple hosts."]}),"\n",(0,n.jsx)(t.h3,{id:"best-practices",children:"Best practices"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:'Implement the "Recommended Monitoring and Maintenance Tasks".'}),"\n",(0,n.jsxs)(t.li,{children:["Run ",(0,n.jsx)(t.code,{children:"gpcheckperf"})," at install time and periodically thereafter, saving the output to compare system performance over time."]}),"\n",(0,n.jsx)(t.li,{children:"Use all the tools at your disposal to understand how your system behaves under different loads."}),"\n",(0,n.jsx)(t.li,{children:"Examine any unusual event to determine the cause."}),"\n",(0,n.jsx)(t.li,{children:"Monitor query activity on the system by running explain plans periodically to ensure the queries are running optimally."}),"\n",(0,n.jsx)(t.li,{children:"Review plans to determine whether index are being used and partition elimination is occurring as expected."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>o,a:()=>a});var n=s(67294);const i={},r=n.createContext(i);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);