"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[7255],{10989:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var n=t(85893),i=t(11151),a=t(52991);const c={title:"Query Performance Overview"},o="Query Performance in Apache Cloudberry",s={id:"performance/index",title:"Query Performance Overview",description:"Apache Cloudberry dynamically eliminates irrelevant partitions in a table and optimally allocates memory for different operators in a query.These enhancements scan less data for a query, accelerate query processing, and support more concurrency.",source:"@site/docs/performance/index.md",sourceDirName:"performance",slug:"/performance/",permalink:"/docs/performance/",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/docs/performance/index.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1744180843,formattedLastUpdatedAt:"Apr 9, 2025",frontMatter:{title:"Query Performance Overview"},sidebar:"docsbars",previous:{title:"Use pgvector for Vector Similarity Search",permalink:"/docs/advanced-analytics/pgvector-search"},next:{title:"Update Statistics",permalink:"/docs/performance/update-stats-using-analyze"}},l={},d=[];function p(e){const r={admonition:"admonition",code:"code",h1:"h1",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"query-performance-in-apache-cloudberry",children:"Query Performance in Apache Cloudberry"}),"\n",(0,n.jsx)(r.p,{children:"Apache Cloudberry dynamically eliminates irrelevant partitions in a table and optimally allocates memory for different operators in a query.These enhancements scan less data for a query, accelerate query processing, and support more concurrency."}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Dynamic partition elimination"}),"\n",(0,n.jsxs)(r.p,{children:["In Apache Cloudberry, values available only when a query runs are used to dynamically prune partitions, which improves query processing speed. Enable or deactivate dynamic partition elimination by setting the server configuration parameter ",(0,n.jsx)(r.code,{children:"gp_dynamic_partition_pruning"})," to ",(0,n.jsx)(r.code,{children:"ON"})," or ",(0,n.jsx)(r.code,{children:"OFF"}),"; it is ",(0,n.jsx)(r.code,{children:"ON"})," by default."]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsx)(r.p,{children:"Memory optimizations"}),"\n",(0,n.jsx)(r.p,{children:"Apache Cloudberry allocates memory optimally for different operators in a query and frees and re-allocates memory during the stages of processing a query."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsx)(r.p,{children:"Apache Cloudberry uses GPORCA by default. GPORCA extends the planning and optimization capabilities of the Postgres optimizer."})}),"\n","\n","\n",(0,n.jsx)(a.Z,{})]})}function u(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},52991:(e,r,t)=>{t.d(r,{Z:()=>x});t(67294);var n=t(90512),i=t(53438),a=t(33692),c=t(13919),o=t(95999),s=t(92503);const l={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var d=t(85893);function p(e){let{href:r,children:t}=e;return(0,d.jsx)(a.Z,{href:r,className:(0,n.Z)("card padding--lg",l.cardContainer),children:t})}function u(e){let{href:r,icon:t,title:i,description:a}=e;return(0,d.jsxs)(p,{href:r,children:[(0,d.jsxs)(s.Z,{as:"h2",className:(0,n.Z)("text--truncate",l.cardTitle),title:i,children:[t," ",i]}),a&&(0,d.jsx)("p",{className:(0,n.Z)("text--truncate",l.cardDescription),title:a,children:a})]})}function m(e){let{item:r}=e;const t=(0,i.LM)(r);return t?(0,d.jsx)(u,{href:t,icon:"\ud83d\uddc3\ufe0f",title:r.label,description:r.description??(0,o.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:r.items.length})}):null}function h(e){let{item:r}=e;const t=(0,c.Z)(r.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",n=(0,i.xz)(r.docId??void 0);return(0,d.jsx)(u,{href:r.href,icon:t,title:r.label,description:r.description??n?.description})}function f(e){let{item:r}=e;switch(r.type){case"link":return(0,d.jsx)(h,{item:r});case"category":return(0,d.jsx)(m,{item:r});default:throw new Error(`unknown item type ${JSON.stringify(r)}`)}}function y(e){let{className:r}=e;const t=(0,i.jA)();return(0,d.jsx)(x,{items:t.items,className:r})}function x(e){const{items:r,className:t}=e;if(!r)return(0,d.jsx)(y,{...e});const a=(0,i.MN)(r);return(0,d.jsx)("section",{className:(0,n.Z)("row",t),children:a.map(((e,r)=>(0,d.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,d.jsx)(f,{item:e})},r)))})}},11151:(e,r,t)=>{t.d(r,{Z:()=>o,a:()=>c});var n=t(67294);const i={},a=n.createContext(i);function c(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);