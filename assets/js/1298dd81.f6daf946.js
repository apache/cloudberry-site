"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[80629],{80281:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>o,frontMatter:()=>n,metadata:()=>c,toc:()=>l});var d=s(85893),i=s(11151);const n={title:"gp_stat_activity"},r="gp_stat_activity",c={id:"sys-catalogs/sys-views/gp-stat-activity",title:"gp_stat_activity",description:"The pgstatactivity view is a cluster-wide view that displays the pgstatactivity information from every primary segment.",source:"@site/versioned_docs/version-2.x/sys-catalogs/sys-views/gp-stat-activity.md",sourceDirName:"sys-catalogs/sys-views",slug:"/sys-catalogs/sys-views/gp-stat-activity",permalink:"/docs/sys-catalogs/sys-views/gp-stat-activity",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/versioned_docs/version-2.x/sys-catalogs/sys-views/gp-stat-activity.md",tags:[],version:"2.x",lastUpdatedBy:"TomShawn",lastUpdatedAt:1748250627,formattedLastUpdatedAt:"May 26, 2025",frontMatter:{title:"gp_stat_activity"},sidebar:"docsbars",previous:{title:"gp_settings",permalink:"/docs/sys-catalogs/sys-views/gp-settings"},next:{title:"pg_stat_all_indexes",permalink:"/docs/sys-catalogs/sys-views/gp-stat-all-indexes"}},a={},l=[];function h(e){const t={code:"code",h1:"h1",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h1,{id:"gp_stat_activity",children:"gp_stat_activity"}),"\n",(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"pg_stat_activity"})," view is a cluster-wide view that displays the ",(0,d.jsx)(t.code,{children:"pg_stat_activity"})," information from every primary segment."]}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"column"}),(0,d.jsx)(t.th,{children:"type"}),(0,d.jsx)(t.th,{children:"references"}),(0,d.jsx)(t.th,{children:"description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"gp_segment_id"})}),(0,d.jsx)(t.td,{children:"integer"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Unique identifier of a segment (or coordinator) instance."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"datid"})}),(0,d.jsx)(t.td,{children:"oid"}),(0,d.jsx)(t.td,{children:"pg_database.oid"}),(0,d.jsx)(t.td,{children:"Database OID"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"datname"})}),(0,d.jsx)(t.td,{children:"name"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Database name"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"pid"})}),(0,d.jsx)(t.td,{children:"integer"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Process ID of this backend"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"sess_id"})}),(0,d.jsx)(t.td,{children:"integer"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Session ID"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"leader_pid"})}),(0,d.jsx)(t.td,{children:"integer"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Process ID of the leader of the session."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"usesysid"})}),(0,d.jsx)(t.td,{children:"oid"}),(0,d.jsx)(t.td,{children:"pg_authid.oid"}),(0,d.jsx)(t.td,{children:"OID of the user logged into this backend"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"usename"})}),(0,d.jsx)(t.td,{children:"name"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Name of the user logged into this backend"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"application_name"})}),(0,d.jsx)(t.td,{children:"text"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Name of the application that is connected to this backend"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"client_addr"})}),(0,d.jsx)(t.td,{children:"inet"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"IP address of the client connected to this backend. If this field is null, it indicates either that the client is connected via a Unix socket on the server machine or that this is an internal process such as autovacuum."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"client_hostname"})}),(0,d.jsx)(t.td,{children:"text"}),(0,d.jsx)(t.td,{}),(0,d.jsxs)(t.td,{children:["Host name of the connected client, as reported by a reverse DNS lookup of ",(0,d.jsx)(t.code,{children:"client_addr"}),". This field will only be non-null for IP connections, and only when log_hostname is enabled."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"client_port"})}),(0,d.jsx)(t.td,{children:"integer"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"TCP port number that the client is using for communication with this backend, or -1 if a Unix socket is used"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"backend_start"})}),(0,d.jsx)(t.td,{children:"timestamptz"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Time backend process was started"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"xact_start"})}),(0,d.jsx)(t.td,{children:"timestamptz"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Transaction start time"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"query_start"})}),(0,d.jsx)(t.td,{children:"timestamptz"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Time query began execution"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"state_change"})}),(0,d.jsx)(t.td,{children:"timestampz"}),(0,d.jsx)(t.td,{}),(0,d.jsxs)(t.td,{children:["Time when the ",(0,d.jsx)(t.code,{children:"state"})," was last changed"]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"wait_event_type"})}),(0,d.jsx)(t.td,{children:"text"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Type of event for which the backend is waiting"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"wait_event"})}),(0,d.jsx)(t.td,{children:"text"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Wait event name if backend is currently waiting"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"state"})}),(0,d.jsx)(t.td,{children:"text"}),(0,d.jsx)(t.td,{}),(0,d.jsxs)(t.td,{children:["Current overall state of this backend. Possible values are:",(0,d.jsx)("br",{}),(0,d.jsx)("br",{}),"- ",(0,d.jsx)(t.code,{children:"active"}),": The backend is running a query.",(0,d.jsx)("br",{}),(0,d.jsx)("br",{}),"- ",(0,d.jsx)(t.code,{children:"idle"}),": The backend is waiting for a new client command.",(0,d.jsx)("br",{}),(0,d.jsx)("br",{}),"- ",(0,d.jsx)(t.code,{children:"idle in transaction"}),": The backend is in a transaction, but is not currently running a query.",(0,d.jsx)("br",{}),(0,d.jsx)("br",{}),"- ",(0,d.jsx)(t.code,{children:"idle in transaction (aborted)"}),": This state is similar to idle in transaction, except one of the statements in the transaction caused an error.",(0,d.jsx)("br",{}),(0,d.jsx)("br",{}),"- ",(0,d.jsx)(t.code,{children:"fastpath function call"}),": The backend is running a fast-path function.",(0,d.jsx)("br",{}),(0,d.jsx)("br",{}),"- ",(0,d.jsx)(t.code,{children:"disabled"}),": This state is reported if ",(0,d.jsx)(t.code,{children:"track_activities"})," is deactivated in this backend."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"backend_xid"})}),(0,d.jsx)(t.td,{children:"xid"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"The current transaction ID (XID) being executed by this backend, if any."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"backend_xmin"})}),(0,d.jsx)(t.td,{children:"xid"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"The minimum transaction ID that this backend needs to retain."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"query_id"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"The query ID of the currently executing query."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"query"})}),(0,d.jsx)(t.td,{children:"text"}),(0,d.jsx)(t.td,{}),(0,d.jsxs)(t.td,{children:["Text of this backend's most recent query. If ",(0,d.jsx)(t.code,{children:"state"})," is active this field shows the currently running query. In all other states, it shows the last query that was run."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"backend_type"})}),(0,d.jsx)(t.td,{children:"text"}),(0,d.jsx)(t.td,{children:'Describes the type of backend process (for example, "client backend", "worker process", "autovacuum worker").'}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"rsgid"})}),(0,d.jsx)(t.td,{children:"oid"}),(0,d.jsx)(t.td,{children:"pg_resgroup.oid"}),(0,d.jsxs)(t.td,{children:["Resource group OID or ",(0,d.jsx)(t.code,{children:"0"}),"."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"rsgname"})}),(0,d.jsx)(t.td,{children:"text"}),(0,d.jsx)(t.td,{children:"pg_resgroup.rsgname"}),(0,d.jsxs)(t.td,{children:["Resource group name or ",(0,d.jsx)(t.code,{children:"unknown"}),"."]})]})]})]})]})}function o(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>c,a:()=>r});var d=s(67294);const i={},n=d.createContext(i);function r(e){const t=d.useContext(n);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),d.createElement(n.Provider,{value:t},e.children)}}}]);