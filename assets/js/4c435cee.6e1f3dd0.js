"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[94572],{92225:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=s(85893),i=s(11151);const n={title:"pg_partitioned_table"},a="pg_partitioned_table",o={id:"sys-catalogs/sys-tables/pg-partitioned-table",title:"pg_partitioned_table",description:"The pgpartitionedtable system catalog stores information about how tables are partitioned.",source:"@site/docs/sys-catalogs/sys-tables/pg-partitioned-table.md",sourceDirName:"sys-catalogs/sys-tables",slug:"/sys-catalogs/sys-tables/pg-partitioned-table",permalink:"/docs/next/sys-catalogs/sys-tables/pg-partitioned-table",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/docs/sys-catalogs/sys-tables/pg-partitioned-table.md",tags:[],version:"current",lastUpdatedBy:"TomShawn",lastUpdatedAt:1749808160,formattedLastUpdatedAt:"Jun 13, 2025",frontMatter:{title:"pg_partitioned_table"},sidebar:"docsbars",previous:{title:"pg_operator",permalink:"/docs/next/sys-catalogs/sys-tables/pg-operator"},next:{title:"pg_policy",permalink:"/docs/next/sys-catalogs/sys-tables/pg-policy"}},d={},c=[];function l(t){const e={a:"a",code:"code",h1:"h1",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"pg_partitioned_table",children:"pg_partitioned_table"}),"\n",(0,r.jsxs)(e.p,{children:["The ",(0,r.jsx)(e.code,{children:"pg_partitioned_table"})," system catalog stores information about how tables are partitioned."]}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"column"}),(0,r.jsx)(e.th,{children:"type"}),(0,r.jsx)(e.th,{children:"references"}),(0,r.jsx)(e.th,{children:"description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"partrelid"})}),(0,r.jsx)(e.td,{children:"oid"}),(0,r.jsxs)(e.td,{children:[(0,r.jsx)(e.a,{href:"/docs/next/sys-catalogs/sys-tables/pg-class",children:"pg_class"}),".oid"]}),(0,r.jsxs)(e.td,{children:["The object identifier of the ",(0,r.jsx)(e.code,{children:"pg_class"})," entry for this partitioned table."]})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"partstrat"})}),(0,r.jsx)(e.td,{children:"char"}),(0,r.jsx)(e.td,{children:"\xa0"}),(0,r.jsxs)(e.td,{children:["The partitioning strategy: ",(0,r.jsx)(e.code,{children:"h"})," = hash partitioned table, ",(0,r.jsx)(e.code,{children:"l"})," = list partitioned table, ",(0,r.jsx)(e.code,{children:"r"})," = range partitioned table."]})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"partnatts"})}),(0,r.jsx)(e.td,{children:"smallint"}),(0,r.jsx)(e.td,{children:"\xa0"}),(0,r.jsx)(e.td,{children:"The number of columns in the partition key."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"partdefid"})}),(0,r.jsx)(e.td,{children:"oid"}),(0,r.jsxs)(e.td,{children:[(0,r.jsx)(e.a,{href:"/docs/next/sys-catalogs/sys-tables/pg-class",children:"pg_class"}),".oid\xa0"]}),(0,r.jsxs)(e.td,{children:["The object identifier of the ",(0,r.jsx)(e.code,{children:"pg_class"})," entry for the default partition of this partitioned table, or zero if this partitioned table does not have a default partition."]})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"partattrs"})}),(0,r.jsx)(e.td,{children:"int2vector"}),(0,r.jsxs)(e.td,{children:[(0,r.jsx)(e.a,{href:"./pg-attribute.",children:"pg_attribute"}),".attnum\xa0"]}),(0,r.jsxs)(e.td,{children:["An array of ",(0,r.jsx)(e.code,{children:"partnatts"})," values that indicate which table columns are part of the partition key. For example, a value of ",(0,r.jsx)(e.code,{children:"1 3"})," would mean that the first and the third table columns make up the partition key. A zero in this array indicates that the corresponding partition key column is an expression, rather than a simple column reference."]})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"partclass"})}),(0,r.jsx)(e.td,{children:"ARRAY"}),(0,r.jsxs)(e.td,{children:[(0,r.jsx)(e.a,{href:"/docs/next/sys-catalogs/sys-tables/pg-class",children:"pg_opclass"}),".oid"]}),(0,r.jsx)(e.td,{children:"For each column in the partition key, contains the object identifier of the operator class to use."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"partcollation"})}),(0,r.jsx)(e.td,{children:"ARRAY"}),(0,r.jsxs)(e.td,{children:[(0,r.jsx)(e.a,{href:"/docs/next/sys-catalogs/sys-tables/pg-class",children:"pg_opclass"}),".oid\xa0"]}),(0,r.jsx)(e.td,{children:"For each column in the partition key, contains the object identifier of the collation to use for partitioning, or zero if the column is not of a collatable data type."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:"partexprs"})}),(0,r.jsx)(e.td,{children:"pg_node_tree"}),(0,r.jsx)(e.td,{children:"\xa0"}),(0,r.jsxs)(e.td,{children:["Expression trees (in ",(0,r.jsx)(e.code,{children:"nodeToString()"})," representation) for partition key columns that are not simple column references. This list contains one element for each zero entry in ",(0,r.jsx)(e.code,{children:"partattrs"}),". Null if all partition key columns are simple references. Apache Cloudberry classic partition syntax does not support specifying an expression in a partition key."]})]})]})]})]})}function h(t={}){const{wrapper:e}={...(0,i.a)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(l,{...t})}):l(t)}},11151:(t,e,s)=>{s.d(e,{Z:()=>o,a:()=>a});var r=s(67294);const i={},n=r.createContext(i);function a(t){const e=r.useContext(n);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:a(t.components),r.createElement(n.Provider,{value:e},t.children)}}}]);