"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[65674],{37477:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var t=i(85893),r=i(11151),o=i(52991);const a={title:"Query Performance Overview"},s="Query Performance in Apache Cloudberry",c={id:"performance/optimize-queries/index",title:"Query Performance Overview",description:"Apache Cloudberry improves query performance through dynamic partition elimination and adaptive memory allocation. These mechanisms help reduce the amount of data scanned, speed up query execution, and enhance overall concurrency.",source:"@site/versioned_docs/version-2.x/performance/optimize-queries/index.md",sourceDirName:"performance/optimize-queries",slug:"/performance/optimize-queries/",permalink:"/docs/performance/optimize-queries/",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/versioned_docs/version-2.x/performance/optimize-queries/index.md",tags:[],version:"2.x",lastUpdatedBy:"TomShawn",lastUpdatedAt:1752804508,formattedLastUpdatedAt:"Jul 18, 2025",frontMatter:{title:"Query Performance Overview"},sidebar:"docsbars",previous:{title:"Define Database Performance",permalink:"/docs/performance/define-database-performance"},next:{title:"Query Processing Overview",permalink:"/docs/performance/optimize-queries/query-process-overview"}},d={},l=[{value:"Dynamic partition elimination",id:"dynamic-partition-elimination",level:2},{value:"Memory optimizations",id:"memory-optimizations",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"query-performance-in-apache-cloudberry",children:"Query Performance in Apache Cloudberry"}),"\n",(0,t.jsx)(n.p,{children:"Apache Cloudberry improves query performance through dynamic partition elimination and adaptive memory allocation. These mechanisms help reduce the amount of data scanned, speed up query execution, and enhance overall concurrency."}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"Apache Cloudberry uses the GPORCA optimizer by default, which extends the native Postgres planner with more advanced optimization capabilities."})}),"\n",(0,t.jsx)(n.h2,{id:"dynamic-partition-elimination",children:"Dynamic partition elimination"}),"\n",(0,t.jsx)(n.p,{children:"Apache Cloudberry supports dynamic partition elimination (DPE), a feature that prunes partitions at query execution time based on runtime values. This reduces the data scanned and improves query efficiency."}),"\n",(0,t.jsx)(n.p,{children:"DPE is supported for the following join types:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Hash Inner Join"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Hash Left Join"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Hash Right Join"})," (since v2.0.0)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"DPE is enabled when the following conditions are met:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The partitioned table is on the outer side of the join."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The join condition is an equality predicate on the partition key."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Statistics are collected on the partitioned tables. For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"ANALYZE <root partition>;\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"gp_dynamic_partition_pruning"})," parameter controls whether DPE is enabled. It is ",(0,t.jsx)(n.code,{children:"ON"})," by default but only applies to the Postgres optimizer. You can verify if DPE is in effect by checking the ",(0,t.jsx)(n.code,{children:"EXPLAIN"})," plan for the presence of a ",(0,t.jsx)(n.code,{children:"Partition Selector"})," node."]}),"\n",(0,t.jsx)(n.h2,{id:"memory-optimizations",children:"Memory optimizations"}),"\n",(0,t.jsx)(n.p,{children:"Apache Cloudberry dynamically allocates memory based on the characteristics of query operators and proactively releases or reallocates memory during different query phases. This leads to more efficient memory usage and faster query execution."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Apache Cloudberry uses GPORCA by default. GPORCA extends the planning and optimization capabilities of the Postgres optimizer."})}),"\n","\n","\n",(0,t.jsx)(o.Z,{})]})}function m(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},52991:(e,n,i)=>{i.d(n,{Z:()=>x});i(67294);var t=i(90512),r=i(53438),o=i(33692),a=i(13919),s=i(95999),c=i(92503);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var l=i(85893);function p(e){let{href:n,children:i}=e;return(0,l.jsx)(o.Z,{href:n,className:(0,t.Z)("card padding--lg",d.cardContainer),children:i})}function m(e){let{href:n,icon:i,title:r,description:o}=e;return(0,l.jsxs)(p,{href:n,children:[(0,l.jsxs)(c.Z,{as:"h2",className:(0,t.Z)("text--truncate",d.cardTitle),title:r,children:[i," ",r]}),o&&(0,l.jsx)("p",{className:(0,t.Z)("text--truncate",d.cardDescription),title:o,children:o})]})}function h(e){let{item:n}=e;const i=(0,r.LM)(n);return i?(0,l.jsx)(m,{href:i,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??(0,s.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n.items.length})}):null}function u(e){let{item:n}=e;const i=(0,a.Z)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",t=(0,r.xz)(n.docId??void 0);return(0,l.jsx)(m,{href:n.href,icon:i,title:n.label,description:n.description??t?.description})}function f(e){let{item:n}=e;switch(n.type){case"link":return(0,l.jsx)(u,{item:n});case"category":return(0,l.jsx)(h,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function y(e){let{className:n}=e;const i=(0,r.jA)();return(0,l.jsx)(x,{items:i.items,className:n})}function x(e){const{items:n,className:i}=e;if(!n)return(0,l.jsx)(y,{...e});const o=(0,r.MN)(n);return(0,l.jsx)("section",{className:(0,t.Z)("row",i),children:o.map(((e,n)=>(0,l.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,l.jsx)(f,{item:e})},n)))})}},11151:(e,n,i)=>{i.d(n,{Z:()=>s,a:()=>a});var t=i(67294);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);