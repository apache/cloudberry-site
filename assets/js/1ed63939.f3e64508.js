"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[61725],{13571:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>i,metadata:()=>a,toc:()=>r});var d=s(85893),n=s(11151);const i={title:"pg_stat_all_tables"},l="pg_stat_all_tables",a={id:"sys-catalogs/sys-views/pg-stat-all-tables",title:"pg_stat_all_tables",description:"The pgstatall_tables view shows one row for each table in the current database (including TOAST tables) to display statistics about accesses to that specific table.",source:"@site/versioned_docs/version-2.x/sys-catalogs/sys-views/pg-stat-all-tables.md",sourceDirName:"sys-catalogs/sys-views",slug:"/sys-catalogs/sys-views/pg-stat-all-tables",permalink:"/docs/sys-catalogs/sys-views/pg-stat-all-tables",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/versioned_docs/version-2.x/sys-catalogs/sys-views/pg-stat-all-tables.md",tags:[],version:"2.x",lastUpdatedBy:"Alwin",lastUpdatedAt:1750319831,formattedLastUpdatedAt:"Jun 19, 2025",frontMatter:{title:"pg_stat_all_tables"},sidebar:"docsbars",previous:{title:"pg_replication_slots",permalink:"/docs/sys-catalogs/sys-views/pg-replication-slots"},next:{title:"pg_stat_bgwriter",permalink:"/docs/sys-catalogs/sys-views/pg-stat-bgwriter"}},c={},r=[];function h(e){const t={code:"code",h1:"h1",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h1,{id:"pg_stat_all_tables",children:"pg_stat_all_tables"}),"\n",(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"pg_stat_all_tables"})," view shows one row for each table in the current database (including TOAST tables) to display statistics about accesses to that specific table."]}),"\n",(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"pg_stat_user_tables"})," and ",(0,d.jsx)(t.code,{children:"pg_stat_sys_table"})," views contain the same information, but filtered to only show user and system tables respectively."]}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Column"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"relid"})}),(0,d.jsx)(t.td,{children:"oid"}),(0,d.jsx)(t.td,{children:"OID of a table"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"schemaname"})}),(0,d.jsx)(t.td,{children:"name"}),(0,d.jsx)(t.td,{children:"Name of the schema that this table is in"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"relname"})}),(0,d.jsx)(t.td,{children:"name"}),(0,d.jsx)(t.td,{children:"Name of this table"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"seq_scan"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Total number of sequential scans initiated on this table from all segment instances"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"seq_tup_read"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Number of live rows fetched by sequential scans"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"idx_scan"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Total number of index scans initiated on this table from all segment instances"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"idx_tup_fetch"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Number of live rows fetched by index scans"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"n_tup_ins"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Number of rows inserted"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"n_tup_upd"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Number of rows updated (includes HOT updated rows)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"n_tup_del"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Number of rows deleted"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"n_tup_hot_upd"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Number of rows HOT updated (i.e., with no separate index update required)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"n_live_tup"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Estimated number of live rows"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"n_dead_tup"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Estimated number of dead rows"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"n_mod_since_analyze"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Estimated number of rows modified since this table was last analyzed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"last_vacuum"})}),(0,d.jsx)(t.td,{children:"timestamp with time zone"}),(0,d.jsxs)(t.td,{children:["Last time this table was manually vacuumed (not counting ",(0,d.jsx)(t.code,{children:"VACUUM FULL"}),")"]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"last_autovacuum"})}),(0,d.jsx)(t.td,{children:"timestamp with time zone"}),(0,d.jsx)(t.td,{children:"Last time this table was vacuumed by the autovacuum daemon"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"last_analyze"})}),(0,d.jsx)(t.td,{children:"timestamp with time zone"}),(0,d.jsx)(t.td,{children:"Last time this table was manually analyzed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"last_autoanalyze"})}),(0,d.jsx)(t.td,{children:"timestamp with time zone"}),(0,d.jsx)(t.td,{children:"Last time this table was analyzed by the autovacuum daemon"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"vacuum_count"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsxs)(t.td,{children:["Number of times this table has been manually vacuumed (not counting ",(0,d.jsx)(t.code,{children:"VACUUM FULL"}),")"]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"autovacuum_count"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Number of times this table has been vacuumed by the autovacuum daemon"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"analyze_count"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Number of times this table has been manually analyzed"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"autoanalyze_count"})}),(0,d.jsx)(t.td,{children:"bigint"}),(0,d.jsx)(t.td,{children:"Number of times this table has been analyzed by the autovacuum daemon"})]})]})]})]})}function o(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>a,a:()=>l});var d=s(67294);const n={},i=d.createContext(n);function l(e){const t=d.useContext(i);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),d.createElement(i.Provider,{value:t},e.children)}}}]);