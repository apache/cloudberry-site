"use strict";(self.webpackChunkApache_Cloudberry_Incubating_website=self.webpackChunkApache_Cloudberry_Incubating_website||[]).push([[80114],{95467:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var l=i(85893),s=i(11151);const r={title:"Build and Install Apache Cloudberry and contrib extensions"},t=void 0,o={id:"deployment/build-and-install",title:"Build and Install Apache Cloudberry and contrib extensions",description:"Compile the code",source:"@site/docs/deployment/build-and-install.md",sourceDirName:"deployment",slug:"/deployment/build-and-install",permalink:"/zh/docs/next/deployment/build-and-install",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/cloudberry-site/edit/main/docs/deployment/build-and-install.md",tags:[],version:"current",lastUpdatedBy:"Dianjin Wang",lastUpdatedAt:1754381087,formattedLastUpdatedAt:"2025\u5e748\u67085\u65e5",frontMatter:{title:"Build and Install Apache Cloudberry and contrib extensions"},sidebar:"docsbars",previous:{title:"Configure Apache Cloudberry Build",permalink:"/zh/docs/next/deployment/configure"},next:{title:"Set up a Cloudberry demo cluster",permalink:"/zh/docs/next/deployment/set-demo-cluster"}},c={},d=[{value:"Compile the code",id:"compile-the-code",level:2},{value:"Install the compiled binaries",id:"install-the-compiled-binaries",level:2},{value:"Verify installation",id:"verify-installation",level:2},{value:"1. Check Cloudberry version",id:"1-check-cloudberry-version",level:3},{value:"2. Verify library dependencies",id:"2-verify-library-dependencies",level:3},{value:"3. Check library extensions",id:"3-check-library-extensions",level:3},{value:"4. Check core utilities",id:"4-check-core-utilities",level:3},{value:"Common issues",id:"common-issues",level:2}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"compile-the-code",children:"Compile the code"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Uses the following command to compile the core components of Apache Cloudberry:\nmake -j$(nproc) --directory=~/cloudberry\n\n# Compiles additional contrib modules, which provide optional features and extensions:\nmake -j$(nproc) --directory=~/cloudberry/contrib\n"})}),"\n",(0,l.jsx)(n.h2,{id:"install-the-compiled-binaries",children:"Install the compiled binaries"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Installs the core components to the specified installation directory:\nmake install --directory=~/cloudberry\n\n# Installs the contrib modules to the specified installation directory:\nmake install --directory=~/cloudberry/contrib\n"})}),"\n",(0,l.jsx)(n.h2,{id:"verify-installation",children:"Verify installation"}),"\n",(0,l.jsx)(n.p,{children:"After installation, verify the setup with these steps:"}),"\n",(0,l.jsx)(n.h3,{id:"1-check-cloudberry-version",children:"1. Check Cloudberry version"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"/usr/local/cloudberry-db/bin/postgres --gp-version\n/usr/local/cloudberry-db/bin/postgres --version\n"})}),"\n",(0,l.jsx)(n.h3,{id:"2-verify-library-dependencies",children:"2. Verify library dependencies"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"ldd /usr/local/cloudberry-db/bin/postgres\n"})}),"\n",(0,l.jsx)(n.h3,{id:"3-check-library-extensions",children:"3. Check library extensions"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"ls -al /usr/local/cloudberry-db/share/postgresql/extension\n"})}),"\n",(0,l.jsx)(n.h3,{id:"4-check-core-utilities",children:"4. Check core utilities"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"ls -l /usr/local/cloudberry-db/bin/\n"})}),"\n",(0,l.jsx)(n.p,{children:"Expected output should show critical binaries like postgres, initdb, etc."}),"\n",(0,l.jsx)(n.h2,{id:"common-issues",children:"Common issues"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Configure fails with missing dependencies:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Verify all required packages are installed."}),"\n",(0,l.jsx)(n.li,{children:"Check the configure log file for specific errors."}),"\n",(0,l.jsx)(n.li,{children:"Ensure CRB repository is properly enabled."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Build fails with compilation errors:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Check make logs for specific errors."}),"\n",(0,l.jsx)(n.li,{children:"Ensure sufficient system resources are available."}),"\n",(0,l.jsx)(n.li,{children:"Verify Xerces-C installation is correct."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Library loading issues:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Verify ",(0,l.jsx)(n.code,{children:"LD_LIBRARY_PATH"})," includes required directories."]}),"\n",(0,l.jsx)(n.li,{children:"Check library permissions."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"For detailed error messages, review the timestamped log files created during the installation process."}),"\n",(0,l.jsxs)(n.p,{children:["You have successfully built and installed Apache Cloudberry on Rocky Linux 9. The installation directory is ",(0,l.jsx)(n.code,{children:"/usr/local/cloudberry-db"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>t});var l=i(67294);const s={},r=l.createContext(s);function t(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);